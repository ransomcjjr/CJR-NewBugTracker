@model CJR_NewBugTracker.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
    <meta name="format-detection" content="telephone=no">
    <meta charset="UTF-8">
    <meta name="description" content="Violate Responsive Admin Template">
    <meta name="keywords" content="Super Admin, Admin, Template, Bootstrap">
    <title>RFP Bug Tracker</title>

    <!-- CSS -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/style.css" rel="stylesheet">
    <link href="~/css/generics.css" rel="stylesheet">
</head>

<body class="skin-blur-violate">
<h4>Use another service to log in.</h4>
<hr />
<div>&emsp;</div>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders) {
                        <button class="img-rounded" type="submit" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><img src="~/img/google.png" /></button>
                    }
                </p>
            </div>
        }
    }
}
</body>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}